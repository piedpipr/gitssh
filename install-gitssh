#!/bin/sh

#================================================================#
# GitSSH Auto-Installer
# Simple approach that downloads and runs installer properly
# POSIX Compatible
#================================================================#

set -e

# Configuration
REPO_URL="https://github.com/piedpipr/gitssh"
TEMP_DIR="/tmp/gitssh-install-$$"
INSTALL_DIR="$TEMP_DIR/gitssh"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

show_banner() {
    cat << 'EOF'
╔═══════════════════════════════════════════════════════════════╗
║                                                               ║
║            ██████╗         ███████╗███████╗██╗  ██╗           ║
║           ██╔════╝ ██╗ ██╗ ██╔════╝██╔════╝██║  ██║           ║
║           ██║  ███╗══╝████║███████╗███████╗███████║           ║
║           ██║   ██║██║ ██║ ╚════██║╚════██║██╔══██║           ║
║            ██████╔╝██║ ██║ ███████║███████║██║  ██║           ║
║            ╚═════╝ ╚═╝ ╚═╝ ╚══════╝╚══════╝╚═╝  ╚═╝v1.0-Oz    ║
║                     <-POSIX Compatible->                      ║
║                                                               ║
╚═══════════════════════════════════════════════════════════════╝
Manage multiple Git, GitHub & GitLab SSH account seesions with ease! 
EOF
}

log_info() { printf "${BLUE}[INFO]${NC} %s\n" "$1"; }
log_success() { printf "${GREEN}[SUCCESS]${NC} %s\n" "$1"; }
log_error() { printf "${RED}[ERROR]${NC} %s\n" "$1" >&2; }
log_warning() { printf "${YELLOW}[WARNING]${NC} %s\n" "$1"; }

cleanup() {
    if [ -d "$TEMP_DIR" ]; then
        rm -rf "$TEMP_DIR"
    fi
}

check_dependencies() {
    missing_deps=""
    
    if ! command -v git >/dev/null 2>&1; then
        missing_deps="$missing_deps git"
    fi
    
    if [ -n "$missing_deps" ]; then
        log_error "Missing required dependencies:$missing_deps"
        log_error "Please install them and try again."
        exit 1
    fi
}

# Simple progress indicator
progress() {
    current="$1"
    total="$2"
    message="$3"
    printf "\r${CYAN}[%d/%d]${NC} %s" "$current" "$total" "$message"
    if [ "$current" -eq "$total" ]; then
        printf "\n"
    fi
}

main() {
    trap cleanup EXIT INT TERM
    
    show_banner
    printf "\n"
    
    # Detect if running via curl|sh
    if [ ! -t 0 ]; then
        log_info "Auto-installer will download GitSSH and launch the interactive installer"
        log_info "The installer will open in a new process with proper terminal access"
        printf "\n"
    fi
    
    log_info "Preparing GitSSH installation..."
    
    # Check dependencies
    progress 1 5 "Checking dependencies"
    check_dependencies
    
    # Create temp directory
    progress 2 5 "Creating temporary directory"
    mkdir -p "$TEMP_DIR"
    
    # Clone repository
    progress 3 5 "Downloading GitSSH from GitHub"
    if ! git clone "$REPO_URL" "$INSTALL_DIR" >/dev/null 2>&1; then
        printf "\n"
        log_error "Failed to clone repository from $REPO_URL"
        exit 1
    fi
    
    # Setup installer
    progress 4 5 "Preparing installer"
    cd "$INSTALL_DIR"
    chmod +x install
    
    progress 5 5 "Download complete"
    printf "\n"
    
    log_success "GitSSH downloaded successfully!"
    printf "\n"
    
    # The key insight: Instead of trying to run the installer from within this script,
    # we create a new script that the user can run directly
    
    if [ ! -t 0 ]; then
        # Running via curl|sh - create a launcher script
        launcher_script="$HOME/.gitssh-installer-tmp"
        
        cat > "$launcher_script" << LAUNCHER_EOF
#!/bin/sh
# GitSSH Installation Launcher
# This script will be executed with proper terminal access

set -e

cd "$INSTALL_DIR"

echo ""
echo "Starting GitSSH installation..."
echo "The installer will guide you through the setup process."
echo ""

# Run the installer with proper terminal access
if ./install; then
    echo ""
    echo "Installation completed successfully!"
    echo "Cleaning up..."
    rm -rf "$TEMP_DIR"
    rm -f "$launcher_script"
    echo ""
    echo "GitSSH is now ready to use!"
    echo "Try: gitssh --help"
else
    echo ""
    echo "Installation failed. Temporary files left in: $INSTALL_DIR"
    echo "You can try running the installer manually:"
    echo "  cd $INSTALL_DIR && ./install"
    rm -f "$launcher_script"
    exit 1
fi
LAUNCHER_EOF

        chmod +x "$launcher_script"
        
        printf "${YELLOW}${BOLD}NEXT STEP:${NC}\n"
        printf "The installer has been downloaded and prepared.\n"
        printf "To complete the installation, run this command:\n\n"
        printf "  ${CYAN}%s${NC}\n\n" "$launcher_script"
        printf "This will launch the interactive installer with proper terminal access.\n"
        printf "${BLUE}Note: The launcher script will self-delete after installation.${NC}\n"
        
    else
        # Running directly - launch installer immediately
        log_info "Launching GitSSH installer..."
        printf "${YELLOW}The installer will start shortly...${NC}\n"
        sleep 2
        
        # Don't cleanup on exit since we're exec'ing
        trap - EXIT
        
        # Execute installer with proper terminal access
        exec ./install
    fi
}

# Entry point
main "$@"